html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

body{
    font-family: sans-serif;
    font-size: 1.4rem;
    color: white;

    height: 100vh;
    display: grid;
    place-items: center;

}

.container{
    background-color: deepskyblue;
    width: 50vw;
    height: 50vw;
    display: grid;
    place-items: center;
}

.container::before, .container::after{
    content: "nothing set";
    text-align: center;
}

/* ------------------ PART 1 ------------------

@media only screen and (min-width: 300px) {
  .container::before {
    content: "min-width: 300px";
  }
}

@media only screen and (min-width: 500px) {
  .container::before {
    content: "min-width: 500px";
  }
}

@media only screen and (min-width: 700px) {
  .container::before {
    content: "min-width: 700px";
  }
}


CSS executes top to bottom. The min-width of 900 is overwritten by the other selectors
Moving this selector to the bottom solves the problem
GENERAL RULE: order min-width selectors from the smallest to the biggest size


@media only screen and (min-width: 900px) {
  .container::before {
    content: "min-width: 900px";
  }
}
*/

/* ------------------ PART 2 ------------------ */
/* GENERAL RULE: order max-width selectors from the biggest to the smallest size */

 @media only screen and (max-width:900px){
  .container::after {
    content: 'max-width: 900px';
  }
}

@media only screen and (max-width:700px){
  .container::after {
    content: 'max-width: 700px';
  }
}

@media only screen and (max-width:500px){
  .container::after {
    content: 'max-width: 500px';
  }
}

@media only screen and (max-width:300px){
  .container::after {
    content: 'max-width: 300px';
  }
}

/* ------------------ PART 3 ------------------ */
/* min-width: This is the way */

/* @media only screen and (min-width: 20em) {
  .container::before {
    content: "min-width: 20em";
  }
}

@media only screen and (min-width: 30em) {
  .container::before {
    content: "min-width: 30em";
  }
}

@media only screen and (min-width: 40em) {
  .container::before {
    content: "min-width: 40em";
  }
}

@media only screen and (min-width: 50em) {
  .container::before {
    content: "min-width: 50em";
  }
} */

/* Part 4 */
/* Yeah, ranges */

@media only screen and (width >= 20em) {
  .container::before {
    content: "width >= 20em";
  }
}

@media only screen and (width >= 30em) {
  .container::before {
    content: "width >= 30em";
  }
}

@media only screen and (width >= 40em) {
  .container::before {
    content: "width >= 40em";
  }
}

@media only screen and (width >= 50em) {
  .container::before {
    content: "width >= 50em";
  }
}
